###
### Enable sudo (required for docker service)
###
sudo: required


###
### Language
###
language: python


###
### Add services
###
services:
  - docker


###
### Build Matrix definition
###
env:
  global:
    - IMAGE=devilbox/apache-2.2
    # travis encrypt DOCKER_USERNAME=user
    # travis encrypt DOCKER_PASSWORD=pass
    # Must be regenerated when repository name/owner changes
    # DOCKER_USERNAME
    - secure: "DC6uq+guleW95fBkEGRRQgHqNrZJmZFFbg0uaeQARDQcy3AZMnHmpFTI6MIlJERCGQ4SACZSUV4oPMPRo78/a3L0fSdSaijLp7hlGxEu8gJYm0saJVliPZJblgvxVICqBgUr9OoV5kxn/L8xPxy8eqdLJs5TwJ2+IDX3gUPvBeN6U21xvwdEA44DwFJpYJ1pt/GoJ6CcsgQu3uJ4MHKAH/HFXxk6z/INJlIqOJnVeEJoJBHGOMb1rp8DnxDpmcuG1G0IkZqv9abVYePWdcl86TOzHHQyjvsI86neQYX6Tr1P0/y+R8gPMzn98fTcNXa33z8aJydRCs8GOQmQNViP1eLTi4a+n+lEA6J98VUBF+LuqWE5+WARczfwWyNE2qsQxjm4dDAfkSIK51Pk7tRs+pIesthmAQusp0TeM6k6O3MUT8ZNbk9dGoW8yguPoABzZgaTBvWvLwbBfU6kg/Vdjk6kuqAB4w2t7alXVYefBsNQmoHgaMNp84nbPbSbliPFMgsgdKgGfRMMUc7lLizpRuOxHVluoDKJNBauEdrJiBufWZWCQvw/TahegeC4owVT6E9lWgsH4mMhp/BPiZyeAmGcxyPhq9FbvTK9CxkLYYeofaJh47yvc6sN5nvH/IwHRPsnq1XJwW7ODPw4DdBPeLBxnMs9WETwkmGfe6ZncdE="
    # DOCKER_PASSWORD
    - secure: "NetFHs4D7GOsuBAx72eEqoM8RiJ/+3mM2iycdMkDjHm1dIv+NHIXh2Y0tbQxiSqWS1LTcCC12zW0bnVWPVHY7C7lEIAtvEvtAHPS0PMv+a3SkGnByIMDFhGUuwnr/dgcfBUnOgw/Ai+PBOrAPfesAZd/rZ4Gbru+WZpNatlJhAoPHMdUBeqWBz7pouldMOAwO9bT7fWa7z3FaFPO2fbCq85bT15uVkKBFc/SkSgvbywDdT053zkrKhrWPQHWZxMOHdxsIimbvFEYzoM3s6IkMwVhFcOqgPqlokhu3MCAJrb1V6554gM7EMhuYqyfFeAB2i/4P5q7yRZeJQ5wm9Zf5D7ywUprFgT3YjsonR7H+2CCZAZpiXg01fl/LC3Mg6IKEL0/726lfu0kevHH60x2oq86r32ioa3AyRmtC/wu9nbm5ey1MLb/BBI/VH1Cv2xdwqgthrikXlt7/KlKN/e+UlS0Dn+GXomN09xlV2COD4YLEVgqK3bXDt1s6xQZ9F//Lt4HTSp6XJw8iuQyV4D5fvTGxvrBervptVlEpfT67dLDpEFm3mS0a5bp2yc0YY/AjKlFM8rc64k2Tu573bdDoPkbEDGgBv8ZGp4XSWVbmfScRZcsJSGdXvntk634kGgAgb8YwP8wR82dCUGjVyrjaljrS5+g5+EQJm2DmXgzRQ4="
  matrix:
    - TEST=0
    - TEST=1


###
### Stage definitions
###
stages:
  - test
  - deploy


###
### Global for all stages
###
install:
  # Get newer docker version
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get update; then break; else i=$((i+1)); fi done
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce; then break; else i=$((i+1)); fi done
  - docker version
script:
  - make build
  - make test ARG=${TEST}


###
### Job definitions
###
jobs:
  include:
    # Final deploy stage
    - stage: deploy
      env: TEST=
      before_script:
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              docker build --no-cache=true -t "${IMAGE}:${TRAVIS_TAG}" . &&
              docker images;
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              docker build --no-cache=true -t "${IMAGE}:latest" . &&
              docker images;
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              docker build --no-cache=true -t "${IMAGE}:${TRAVIS_BRANCH}" . &&
              docker images;
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
      script:
        # Push to docker hub on success
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin &&
            if [ -n "${TRAVIS_TAG}" ]; then
              echo "Pushing ${IMAGE}:${TRAVIS_TAG}" &&
              docker push "${IMAGE}:${TRAVIS_TAG}" &&
              docker tag "${IMAGE}:${TRAVIS_TAG}" "${IMAGE}:latest" &&
              echo "Pushing ${IMAGE}:latest" &&
              docker push "${IMAGE}:latest";
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              echo "Pushing ${IMAGE}:latest" &&
              docker push "${IMAGE}:latest";
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              echo "Pushing ${IMAGE}:${TRAVIS_BRANCH}" &&
              docker push "${IMAGE}:${TRAVIS_BRANCH}";
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
